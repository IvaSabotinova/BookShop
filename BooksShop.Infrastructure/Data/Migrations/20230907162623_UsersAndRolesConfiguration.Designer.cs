// <auto-generated />
using System;
using BooksShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BooksShop.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230907162623_UsersAndRolesConfiguration")]
    partial class UsersAndRolesConfiguration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BooksShop.Infrastructure.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegisteredOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "283073f1-cc28-485a-ab58-44f4ed128264",
                            AccessFailedCount = 0,
                            Address = "Izgrev block 41, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "2c6c5db2-9585-4d50-8966-5b54c135f709",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Iva",
                            LastName = "Sabotinova",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAECAiCMgrP3l1jz7A0JuHtEvIkDtMfrDXnoOyIAwkp7/k38+FBe/Xfh0YsB4Oc1+ATw==",
                            PhoneNumber = "+359889694030",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8632),
                            SecurityStamp = "4e85416a-1066-4237-808f-d772234c76d2",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "9a9b36f7-4a83-48c8-91d3-9136426dbee9",
                            AccessFailedCount = 0,
                            Address = "Slaveykov block 33, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "9a5c6ffd-235e-4946-aa3a-c9c980f783af",
                            Email = "client@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Pesho",
                            LastName = "Martinov",
                            LockoutEnabled = false,
                            NormalizedEmail = "CLIENT@GMAIL.COM",
                            NormalizedUserName = "CLIENT",
                            PasswordHash = "AQAAAAEAACcQAAAAEKqCo7mePzKVEx+BTaNq0C6j853lCwHaKcVq+2FJuCP6N8QAgaiwMnpyGXduJfnVfw==",
                            PhoneNumber = "+359877222222",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 238, DateTimeKind.Local).AddTicks(127),
                            SecurityStamp = "0fbb496a-504b-461f-994a-68057d221d25",
                            TwoFactorEnabled = false,
                            UserName = "client"
                        },
                        new
                        {
                            Id = "45538c3e-df96-4b79-86dc-e190def35cf4",
                            AccessFailedCount = 0,
                            Address = "Lazur block 33, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "a6fdd75c-4c5b-457b-85f4-09931f5a5128",
                            Email = "gosho@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Gosho",
                            LastName = "Goshev",
                            LockoutEnabled = false,
                            NormalizedEmail = "GOSHO@GMAIL.COM",
                            NormalizedUserName = "GOSHO",
                            PasswordHash = "AQAAAAEAACcQAAAAEHEWiRbwl2pRMfcDodVwB2CfjQUJMXSMmYvSNZItjgPdQ3HwiyghIMBGvvEMIAo6sA==",
                            PhoneNumber = "+359877111111",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 239, DateTimeKind.Local).AddTicks(3257),
                            SecurityStamp = "76709fcb-7200-4380-886a-b2b300cc40c0",
                            TwoFactorEnabled = false,
                            UserName = "Gosho"
                        },
                        new
                        {
                            Id = "a9e4a9d6-96f3-40dd-8968-a30baa02ce9b",
                            AccessFailedCount = 0,
                            Address = "Troikata Square block 1, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "9289c087-9638-4607-b618-4b2eefdf25a0",
                            Email = "vlado20@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Vlado",
                            LastName = "Ivanov",
                            LockoutEnabled = false,
                            NormalizedEmail = "VLADO20@ABV.BG",
                            NormalizedUserName = "VLADO20",
                            PasswordHash = "AQAAAAEAACcQAAAAEFOJDlnIlCrcnTEnEe/reuIsQUQlE1IA/zSnQsvZm4TMvil7SwnBuMSdgKyK3qfQ9g==",
                            PhoneNumber = "+359877334334",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 240, DateTimeKind.Local).AddTicks(4983),
                            SecurityStamp = "ffbeeb8d-2ebd-4138-813f-b95fc79a5428",
                            TwoFactorEnabled = false,
                            UserName = "Vlado20"
                        },
                        new
                        {
                            Id = "8d307bd3-3290-43c2-b9b3-eb2daf715cb4",
                            AccessFailedCount = 0,
                            Address = "Vl.Varnenchik block 50, Varna 9000, Bulgaria",
                            ConcurrencyStamp = "314f061d-0c50-4e27-8d5f-72ee19ba0ed2",
                            Email = "mara@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Mara",
                            LastName = "Petrova",
                            LockoutEnabled = false,
                            NormalizedEmail = "MARA@ABV.BG",
                            NormalizedUserName = "MARA",
                            PasswordHash = "AQAAAAEAACcQAAAAEFfQA3U9FU27ls36w4fv2KA9KTzzOHhubhr6d/RWxc014Iq83e90v9orbWZc/0ygvA==",
                            PhoneNumber = "+359888556556",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 241, DateTimeKind.Local).AddTicks(6230),
                            SecurityStamp = "118e4502-74d3-4935-a287-2dacc88ffd29",
                            TwoFactorEnabled = false,
                            UserName = "Mara001"
                        },
                        new
                        {
                            Id = "7a09fc16-8d35-48e4-bf98-532a876423f2",
                            AccessFailedCount = 0,
                            Address = "Vl.Varnenchik block 8, Varna 9000, Bulgaria",
                            ConcurrencyStamp = "a429aa5f-c55f-4efe-b1fe-e7da15a3966e",
                            Email = "nikola80@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Nikola",
                            LastName = "Petrov",
                            LockoutEnabled = false,
                            NormalizedEmail = "NIKOLA80@ABV.BG",
                            NormalizedUserName = "NIKOLA",
                            PasswordHash = "AQAAAAEAACcQAAAAED3m5LkGKihrqNF+dxkITy6htMH7uYjWgSoLMIag2jkLV2VBeVzSsNdKV6T98pmnBw==",
                            PhoneNumber = "+359899555555",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 242, DateTimeKind.Local).AddTicks(7405),
                            SecurityStamp = "39a41f40-c129-469f-8c1b-e6d05c585006",
                            TwoFactorEnabled = false,
                            UserName = "Nikola"
                        },
                        new
                        {
                            Id = "0908214c-eac6-4029-b303-8d987037c4ad",
                            AccessFailedCount = 0,
                            Address = "Primorski Blvd 7, Varna 9000, Bulgaria",
                            ConcurrencyStamp = "bfa9d95a-7b53-4f82-b8b3-a261f4daad2f",
                            Email = "martin@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Martin",
                            LastName = "Martinov",
                            LockoutEnabled = false,
                            NormalizedEmail = "MARTIN@ABV.BG",
                            NormalizedUserName = "MARTIN123",
                            PasswordHash = "AQAAAAEAACcQAAAAEJNqLAcNFPMGVcfv7Bldpr2bw1f3P2iwh4/Knew7zE85ru/jPQx0AdQ6wNsM3iwB7w==",
                            PhoneNumber = "+359898554554",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 243, DateTimeKind.Local).AddTicks(8583),
                            SecurityStamp = "ebf74ae6-4167-448b-a378-535e346a9b04",
                            TwoFactorEnabled = false,
                            UserName = "Martin123"
                        },
                        new
                        {
                            Id = "77eb1836-14d0-414d-85ad-3413afd9e2d9",
                            AccessFailedCount = 0,
                            Address = "Stefan Stambolov Blvd 8, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "b00f8ef5-0000-4b5b-bcc1-58bcd387f37f",
                            Email = "valeri@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Valeri",
                            LastName = "Yovkov",
                            LockoutEnabled = false,
                            NormalizedEmail = "VALERI@ABV.BG",
                            NormalizedUserName = "VALERI",
                            PasswordHash = "AQAAAAEAACcQAAAAEBeNgYozpM3P6EC4voJkEfh4h8PGMv3uaq7uQuhuxL/7AojUst0YVAWI/BQPGfzbWQ==",
                            PhoneNumber = "+359888121210",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 244, DateTimeKind.Local).AddTicks(9729),
                            SecurityStamp = "c59cee6c-8571-4f3e-b005-e15c05fe2725",
                            TwoFactorEnabled = false,
                            UserName = "Valeri"
                        },
                        new
                        {
                            Id = "f18ff312-2889-46df-a392-264b865a2c72",
                            AccessFailedCount = 0,
                            Address = "Hr. Botev Blvd 85, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "b9aa5fe7-0599-481a-81ba-b58615384f2f",
                            Email = "gogo@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Gogo",
                            LastName = "Goshev",
                            LockoutEnabled = false,
                            NormalizedEmail = "GOGO@ABV.BG",
                            NormalizedUserName = "GOGO",
                            PasswordHash = "AQAAAAEAACcQAAAAECiv7BW2uB+7pAxIge7ef6ZGOAKjc/lNR2OwAR1WYHLq5WXk2amZl3JZbdXHlnnHhw==",
                            PhoneNumber = "+359898331456",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 246, DateTimeKind.Local).AddTicks(769),
                            SecurityStamp = "7eaa4e34-9bc7-4bd2-8bc3-866cd7acc832",
                            TwoFactorEnabled = false,
                            UserName = "Gogo"
                        },
                        new
                        {
                            Id = "2c2467dc-c396-46ce-af79-da3e48398f4a",
                            AccessFailedCount = 0,
                            Address = "Vazrazhdane Quarter block 70, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "7aa647f4-dc24-4719-9337-b39f5ca66e13",
                            Email = "rayko@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Rayko",
                            LastName = "Yasenov",
                            LockoutEnabled = false,
                            NormalizedEmail = "RAYKO@ABV.BG",
                            NormalizedUserName = "RAYKO",
                            PasswordHash = "AQAAAAEAACcQAAAAEAy3Lbc4eYAsibv9157yfRyaTJ6VWr1I6vg8xsCU0Q28/NGaiobLcIwMmfHXqurCdg==",
                            PhoneNumber = "+359888658974",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 247, DateTimeKind.Local).AddTicks(1852),
                            SecurityStamp = "32718718-f794-4650-aa82-339168ae3e83",
                            TwoFactorEnabled = false,
                            UserName = "Rayko"
                        },
                        new
                        {
                            Id = "87582ce2-32f8-48ac-a429-cdb22d49bd45",
                            AccessFailedCount = 0,
                            Address = "Vazrazhdane Quarter block 71, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "c2b17802-7be9-4352-bc38-d29ff924a9c6",
                            Email = "yasen@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Yasen",
                            LastName = "Ivanov",
                            LockoutEnabled = false,
                            NormalizedEmail = "YASEN@ABV.BG",
                            NormalizedUserName = "YASEN",
                            PasswordHash = "AQAAAAEAACcQAAAAEJ271G3wcONzimRFDkobIuQRhjIio/M3TcngL5aS/YnUeRnZxVOWBANEk3p3pivAGQ==",
                            PhoneNumber = "+359888656565",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 248, DateTimeKind.Local).AddTicks(3030),
                            SecurityStamp = "470feb4d-45c2-47a0-b54f-3080dfd62db8",
                            TwoFactorEnabled = false,
                            UserName = "Yasen"
                        },
                        new
                        {
                            Id = "2708e501-67b2-4c5b-aacd-9a044df9de21",
                            AccessFailedCount = 0,
                            Address = "Slaveykov block 31, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "2b10066c-949a-468e-8c4b-86366ab064cf",
                            Email = "atanas@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Atanas",
                            LastName = "Mitev",
                            LockoutEnabled = false,
                            NormalizedEmail = "ATANAS@ABV.BG",
                            NormalizedUserName = "ATANAS",
                            PasswordHash = "AQAAAAEAACcQAAAAEKico08Rd159jQCB9ZTAKOVQsTJnl56lXXL6Ymf7C/+65De8kuIU/AfzDv8wIo2EDA==",
                            PhoneNumber = "+359899313131",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 249, DateTimeKind.Local).AddTicks(4254),
                            SecurityStamp = "2ff1e3cd-8386-444f-8ead-abd4b93174f2",
                            TwoFactorEnabled = false,
                            UserName = "Atanas"
                        },
                        new
                        {
                            Id = "2b760fe4-01b3-4794-9d1a-a63002dc3ccd",
                            AccessFailedCount = 0,
                            Address = "Izgrev Quarter block 29, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "53a5fa4a-541f-4625-b163-4b23997f22b8",
                            Email = "simona@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Simona",
                            LastName = "Georgieva",
                            LockoutEnabled = false,
                            NormalizedEmail = "SIMONA@ABV.BG",
                            NormalizedUserName = "SIMONA",
                            PasswordHash = "AQAAAAEAACcQAAAAEAnv6gayeivjZkpwrXY0qBOEqelSZJQui/JE7/aekRzShuwp5baV51b16NoGlNGXlQ==",
                            PhoneNumber = "+359888333333",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 250, DateTimeKind.Local).AddTicks(5441),
                            SecurityStamp = "e16cdc13-76f6-4db7-ac15-5cf41434d8f9",
                            TwoFactorEnabled = false,
                            UserName = "Simona"
                        },
                        new
                        {
                            Id = "acb6d047-97c5-4553-82cf-d6042362af1e",
                            AccessFailedCount = 0,
                            Address = "Mara Gidik street 29, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "f891fefa-7aa2-4a01-835d-960063a7000a",
                            Email = "denislav@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Denislav",
                            LastName = "Georgiev",
                            LockoutEnabled = false,
                            NormalizedEmail = "DENISLAV@ABV.BG",
                            NormalizedUserName = "DENISLAV",
                            PasswordHash = "AQAAAAEAACcQAAAAELLFJt470spyQfxLSJK7uv2n1uaWVb5cOWEJOgUnVMJlDyi751mNnzUSZAnB9MKr1A==",
                            PhoneNumber = "+359888010101",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 251, DateTimeKind.Local).AddTicks(6625),
                            SecurityStamp = "9da660ed-92a4-447b-a8a1-729ee1831a39",
                            TwoFactorEnabled = false,
                            UserName = "Denislav"
                        },
                        new
                        {
                            Id = "a6424f60-c8e2-495d-bf48-bfb3e9457516",
                            AccessFailedCount = 0,
                            Address = "Mara Gidik street 18, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "f3ca2747-42c0-4993-b54a-b224f710963e",
                            Email = "daniel@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Daniel",
                            LastName = "Vladislavov",
                            LockoutEnabled = false,
                            NormalizedEmail = "DANIEL@ABV.BG",
                            NormalizedUserName = "DANIEL",
                            PasswordHash = "AQAAAAEAACcQAAAAEOqAhUPLnxCqNK7OzHbDHGkOxJF1eWLNa2/AQTN8THLGOkI6mbrg4h3vQzTB7b5rSQ==",
                            PhoneNumber = "+359899919100",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 252, DateTimeKind.Local).AddTicks(7945),
                            SecurityStamp = "04fb792f-a318-46d7-ba3b-0fa2df4e3b62",
                            TwoFactorEnabled = false,
                            UserName = "Daniel"
                        },
                        new
                        {
                            Id = "b2a83ec0-3fd0-4500-93b6-9fd1804db4fc",
                            AccessFailedCount = 0,
                            Address = "Gladstone street block 6, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "b5aded9d-c4f2-40c9-86e8-d5e6f9ea9f6d",
                            Email = "daniela@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Daniela",
                            LastName = "Ivanova",
                            LockoutEnabled = false,
                            NormalizedEmail = "DANIELA@ABV.BG",
                            NormalizedUserName = "DANIELA",
                            PasswordHash = "AQAAAAEAACcQAAAAEKVVoz3XR6pexZV8Vu9m8Lu/aKr0l0V1njBn8n8Y6HGbjutH2AX11D0MPBom41rR0A==",
                            PhoneNumber = "+359888030330",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 253, DateTimeKind.Local).AddTicks(9444),
                            SecurityStamp = "af04e039-dbff-423c-8a0e-533ec2306cfa",
                            TwoFactorEnabled = false,
                            UserName = "Daniela"
                        },
                        new
                        {
                            Id = "0e6103a7-8dae-4d2e-b438-74fe02768f4f",
                            AccessFailedCount = 0,
                            Address = "Izgrev Quarter block 6, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "4e67fa3d-db46-4ea0-b149-1d4d7bb497b3",
                            Email = "stanislav@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Stanislav",
                            LastName = "Georgiev",
                            LockoutEnabled = false,
                            NormalizedEmail = "STANISLAV@ABV.BG",
                            NormalizedUserName = "STANISLAV",
                            PasswordHash = "AQAAAAEAACcQAAAAEDR76QcitG3BrO49MvTm07bJqsGc4G1B1hrMHseN2aSyKFSz4kNLR1sWPCA4alCnYA==",
                            PhoneNumber = "+359877711771",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 255, DateTimeKind.Local).AddTicks(792),
                            SecurityStamp = "886009c1-bf7d-4546-916c-9e26a024dafa",
                            TwoFactorEnabled = false,
                            UserName = "Stanislav"
                        },
                        new
                        {
                            Id = "94280b80-6076-4025-9bf7-ae251fb7bcee",
                            AccessFailedCount = 0,
                            Address = "Izgrev Quarter block 22, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "44a3035f-504d-4bcd-bb75-68ddfa57df61",
                            Email = "stanislava@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Stanislava",
                            LastName = "Ivanova",
                            LockoutEnabled = false,
                            NormalizedEmail = "STANISLAVA@ABV.BG",
                            NormalizedUserName = "STANISLAVA",
                            PasswordHash = "AQAAAAEAACcQAAAAEGX96JgEVYAdB2KN46QFfBp5SrLHRYud+O1wldjb7lqWc4Zk2GLaUIqy3Z2/fSy6cg==",
                            PhoneNumber = "+359889126543",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 256, DateTimeKind.Local).AddTicks(2090),
                            SecurityStamp = "c45a142b-79a7-47ab-b3e7-756dab92bc50",
                            TwoFactorEnabled = false,
                            UserName = "Stanislava"
                        },
                        new
                        {
                            Id = "109044cd-44fb-470c-b7b9-2724987b08de",
                            AccessFailedCount = 0,
                            Address = "Lazur Quarter block 80, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "416821d0-3d17-4c7e-bf0c-535a995afdb5",
                            Email = "yovko@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Yovko",
                            LastName = "Ivov",
                            LockoutEnabled = false,
                            NormalizedEmail = "YOVKO@ABV.BG",
                            NormalizedUserName = "YOVKO",
                            PasswordHash = "AQAAAAEAACcQAAAAEBohm8NlXPLQepEXCR0ZDJtmSYr63ID4+yMPv3fYCqck656Xh5w8GeNGgBvcjBY/fQ==",
                            PhoneNumber = "+359876262626",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 257, DateTimeKind.Local).AddTicks(3325),
                            SecurityStamp = "6a943390-cd90-4491-8600-1c5d0c4b335f",
                            TwoFactorEnabled = false,
                            UserName = "Yovko"
                        },
                        new
                        {
                            Id = "93a879f7-64a2-4a8c-b821-a1304bd7c8fb",
                            AccessFailedCount = 0,
                            Address = "Vazrazhdane Quarter block 50, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "fae138ff-c7f4-4bb0-b3c5-d9e8b0f383f4",
                            Email = "yovka@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Yovka",
                            LastName = "Yasenova",
                            LockoutEnabled = false,
                            NormalizedEmail = "YOVKA@ABV.BG",
                            NormalizedUserName = "YOVKA",
                            PasswordHash = "AQAAAAEAACcQAAAAEBFASDJ/bZ9k7TGoRShwCaIar9xd+r8CVbRjnvYmcNYkTSUmtD9pVHAmyGdN9l3vDg==",
                            PhoneNumber = "+359998919119",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 258, DateTimeKind.Local).AddTicks(4517),
                            SecurityStamp = "19145ff2-fa0a-4141-a2bf-87fdb3e7671e",
                            TwoFactorEnabled = false,
                            UserName = "Yovka"
                        },
                        new
                        {
                            Id = "d966a121-573e-49ed-bf9b-5f677d0a4aa8",
                            AccessFailedCount = 0,
                            Address = "Vazrazhdane Quarter block 49, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "1c425a15-d7d5-4dad-900b-caa9ea25f26c",
                            Email = "boiko@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Boiko",
                            LastName = "Asenov",
                            LockoutEnabled = false,
                            NormalizedEmail = "BOIKO@ABV.BG",
                            NormalizedUserName = "BOIKO",
                            PasswordHash = "AQAAAAEAACcQAAAAEFS+c4oh0DFvJ0hLyEqXyvJXtbCNfhDguIblgbO1IApWL2Pz81EFYcNze+wyCNHfjQ==",
                            PhoneNumber = "+359888147147",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 259, DateTimeKind.Local).AddTicks(5823),
                            SecurityStamp = "eed398a2-0e13-4a73-b913-82e2428a80fb",
                            TwoFactorEnabled = false,
                            UserName = "Boiko"
                        },
                        new
                        {
                            Id = "1c1a75f2-63d1-4aaf-b026-b9e13ebb62ca",
                            AccessFailedCount = 0,
                            Address = "Slaveykov Quarter block 20, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "c35642c0-9059-4556-abde-5a8390c56f76",
                            Email = "boyan@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Boyan",
                            LastName = "Atanasov",
                            LockoutEnabled = false,
                            NormalizedEmail = "BOYAN@ABV.BG",
                            NormalizedUserName = "BOYAN",
                            PasswordHash = "AQAAAAEAACcQAAAAEB0U5FH7JFiuPXcvOb7rCpuiuLAhVK5wbBGQsCBbQG54mAxC/uDNfeyhJ6wqrWqIDA==",
                            PhoneNumber = "+359877742247",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 260, DateTimeKind.Local).AddTicks(7121),
                            SecurityStamp = "c9e893c3-9522-486e-95a5-4da55d9c003a",
                            TwoFactorEnabled = false,
                            UserName = "Boyan"
                        },
                        new
                        {
                            Id = "b87fc486-a805-4fad-89bd-c836281ce8a0",
                            AccessFailedCount = 0,
                            Address = "Slaveykov Quarter block 17, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "29003763-614b-4510-8d82-e3a1759a7b84",
                            Email = "boyana@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Boyana",
                            LastName = "Marinova",
                            LockoutEnabled = false,
                            NormalizedEmail = "BOYANA@ABV.BG",
                            NormalizedUserName = "BOYANA",
                            PasswordHash = "AQAAAAEAACcQAAAAELpSnDzcqY+qpj+3MFSHMLmzL9fm/dp/3gu8Zi00S/+sQ+KWZxv9HuNWVQaun+q3Ug==",
                            PhoneNumber = "+359888159159",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 261, DateTimeKind.Local).AddTicks(8203),
                            SecurityStamp = "4b2d00a6-b6e8-4d99-87cd-cf456274a7e1",
                            TwoFactorEnabled = false,
                            UserName = "Boyana"
                        },
                        new
                        {
                            Id = "33008499-b5d6-4dc4-8b90-81eb4c5da11e",
                            AccessFailedCount = 0,
                            Address = "Hr. Boteb Blvd block 5, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "9e4b052b-9802-444a-8314-9ef021013700",
                            Email = "genadi@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Genadi",
                            LastName = "Atanasov",
                            LockoutEnabled = false,
                            NormalizedEmail = "GENADI@ABV.BG",
                            NormalizedUserName = "GENADI",
                            PasswordHash = "AQAAAAEAACcQAAAAEPZ9TsBGz85q2EnKQjqDe57ZB/3jtF5SUTKMZ6nR9Tte9wYiLpQ06FISTNJbTJ7W7w==",
                            PhoneNumber = "+359899369369",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 262, DateTimeKind.Local).AddTicks(9518),
                            SecurityStamp = "b3bb23ee-6801-49f7-9fbb-0cba884f710e",
                            TwoFactorEnabled = false,
                            UserName = "Genadi"
                        },
                        new
                        {
                            Id = "8a702a88-26b5-4e9d-bd3e-6b088b350db5",
                            AccessFailedCount = 0,
                            Address = "Hr. Boteb Blvd block 2, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "c7daffc6-c692-4b51-a7ea-4de5e669f7ca",
                            Email = "dragomir@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Dragomir",
                            LastName = "Martinov",
                            LockoutEnabled = false,
                            NormalizedEmail = "DRAGOMIR@ABV.BG",
                            NormalizedUserName = "DRAGOMIR",
                            PasswordHash = "AQAAAAEAACcQAAAAEH2MBTFK6rXgLQqY0J/rzyXdrJ8QdbzsZBL0mbFdyRwgWLxh/somBitM71v3qRyajg==",
                            PhoneNumber = "+359888258258",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 264, DateTimeKind.Local).AddTicks(775),
                            SecurityStamp = "34d34e83-555e-4d3d-b6cd-e3db0e4d153d",
                            TwoFactorEnabled = false,
                            UserName = "Dragomir"
                        },
                        new
                        {
                            Id = "a6dc0238-4999-49e9-93c1-dfd243e36781",
                            AccessFailedCount = 0,
                            Address = "Mara Gidik Street block 8, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "f206d3a4-73f6-4f72-a330-0239a5ca4a4b",
                            Email = "ilian@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Ilian",
                            LastName = "Stoyanov",
                            LockoutEnabled = false,
                            NormalizedEmail = "ILIAN@ABV.BG",
                            NormalizedUserName = "ILIAN",
                            PasswordHash = "AQAAAAEAACcQAAAAEBBrel2sNVmpYYSfTTS8//nk1oXxY3xgINHQL/JuW02PkcH2El5XJpFc7Uyt6b8aaA==",
                            PhoneNumber = "+359888654789",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 265, DateTimeKind.Local).AddTicks(2090),
                            SecurityStamp = "03a10633-5b85-4157-9956-c23774cc8a75",
                            TwoFactorEnabled = false,
                            UserName = "Ilian"
                        },
                        new
                        {
                            Id = "838db25f-ef7e-4cda-aa56-dfe1691d298d",
                            AccessFailedCount = 0,
                            Address = "Mara Gidik Street block 4, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "e4f681c6-892a-48b5-8921-d49e8cbba8de",
                            Email = "desislav@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Desislav",
                            LastName = "Stoyanov",
                            LockoutEnabled = false,
                            NormalizedEmail = "DESISLAV@ABV.BG",
                            NormalizedUserName = "DESISLAV",
                            PasswordHash = "AQAAAAEAACcQAAAAEIWBa+nBVbYLwEfefBoj7T3P/nvTuSfCE1W3u7ppglJcaJYbwp02WYEr6rbL3eRMYg==",
                            PhoneNumber = "+359899949596",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 266, DateTimeKind.Local).AddTicks(3264),
                            SecurityStamp = "f506bf20-bd63-43bf-bc13-473cbe10e3b5",
                            TwoFactorEnabled = false,
                            UserName = "Desislav"
                        },
                        new
                        {
                            Id = "22657eba-f41a-4bb3-986e-83ef23fedf15",
                            AccessFailedCount = 0,
                            Address = "Vl. Varnenchik block 14, Varna 9000, Bulgaria",
                            ConcurrencyStamp = "7ad89874-5f1e-457b-bdbf-f74a220aebe7",
                            Email = "lyuben@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Lyuben",
                            LastName = "Nikolov",
                            LockoutEnabled = false,
                            NormalizedEmail = "LYUBEN@ABV.BG",
                            NormalizedUserName = "LYUBEN",
                            PasswordHash = "AQAAAAEAACcQAAAAECTzhBz578X+tG1i+BMmAM3oEqGM2g86NsjupOiEGK4ufQzgLxI3JNZOTjsJGHDFmQ==",
                            PhoneNumber = "+359897357357",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 267, DateTimeKind.Local).AddTicks(4267),
                            SecurityStamp = "6555bbfd-42bf-45a2-affe-8b7c17acdb21",
                            TwoFactorEnabled = false,
                            UserName = "Lyuben"
                        },
                        new
                        {
                            Id = "038e5319-0910-4cba-bf80-253a10030324",
                            AccessFailedCount = 0,
                            Address = "Lazur Quarter block 13, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "3b82ff2b-0720-47b4-95b9-5f0c59f88f11",
                            Email = "dinko@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Dinko",
                            LastName = "Martinov",
                            LockoutEnabled = false,
                            NormalizedEmail = "DINKO@ABV.BG",
                            NormalizedUserName = "DINKO",
                            PasswordHash = "AQAAAAEAACcQAAAAELnsMEhkqQiG5oAcCJizMkfVHakqb0KxqeJpm3iMQYmue1HjpEG+d+BoLWxVIWHFZQ==",
                            PhoneNumber = "+359888124578",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 268, DateTimeKind.Local).AddTicks(5690),
                            SecurityStamp = "9d4f2876-a9f8-4c4c-96b4-66e9b28342cf",
                            TwoFactorEnabled = false,
                            UserName = "Dinko"
                        },
                        new
                        {
                            Id = "978959e9-4ec5-49a0-a703-77884cc8d109",
                            AccessFailedCount = 0,
                            Address = "Lazur Quarter block 16, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "c24321a4-39bf-4e4d-9f86-ef72d7bfb14c",
                            Email = "katerina@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Katerina",
                            LastName = "Markova",
                            LockoutEnabled = false,
                            NormalizedEmail = "KATERINA@ABV.BG",
                            NormalizedUserName = "KATERINA",
                            PasswordHash = "AQAAAAEAACcQAAAAEJPsaiT9zFHssqgfQjCcJuPFiwriTYaX47QgjXxAMdswfZkPpca82/CeVLfmc9co6g==",
                            PhoneNumber = "+359888951847",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 269, DateTimeKind.Local).AddTicks(6915),
                            SecurityStamp = "ab4d9786-d522-429a-9488-382ae16a42a9",
                            TwoFactorEnabled = false,
                            UserName = "Katerina"
                        },
                        new
                        {
                            Id = "1de2f067-3236-4b27-9fba-8b5d49db06ae",
                            AccessFailedCount = 0,
                            Address = "Slaveykov Quarter block 68, Bourgas 8000, Bulgaria",
                            ConcurrencyStamp = "76a0c9ae-39c0-48a0-a0f7-371a50bf935e",
                            Email = "dimitar@abv.bg",
                            EmailConfirmed = true,
                            FirstName = "Dimitar",
                            LastName = "Dimitrov",
                            LockoutEnabled = false,
                            NormalizedEmail = "DIMITAR@ABV.BG",
                            NormalizedUserName = "DIMITAR",
                            PasswordHash = "AQAAAAEAACcQAAAAEL3gjqvC9nGfam9p8hqUoAxcAd9ChWOw3Lg6Vej1VsdftdNvzm1fxb6uCTRJzVNqfQ==",
                            PhoneNumber = "+359888181818",
                            PhoneNumberConfirmed = false,
                            RegisteredOn = new DateTime(2023, 9, 7, 19, 26, 23, 270, DateTimeKind.Local).AddTicks(8281),
                            SecurityStamp = "c4dfc9a5-4cb1-4d73-a30a-c98d0941b99f",
                            TwoFactorEnabled = false,
                            UserName = "Dimitar"
                        });
                });

            modelBuilder.Entity("BooksShop.Infrastructure.Data.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumOfPages")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Bradley R. Schiller",
                            CategoryId = 1,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8157),
                            ISBN = "007100940X",
                            ImageUrl = "/images/books/90e0e436-1c66-41ad-88e6-e1a153404144.jpg",
                            NumOfPages = 969,
                            Price = 25.8m,
                            Title = "The economy today"
                        },
                        new
                        {
                            Id = 2,
                            Author = "John Stuart Mill",
                            CategoryId = 1,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8197),
                            ISBN = "OL25914464M",
                            ImageUrl = "/images/books/73174e87-d6b4-4604-9712-7330ab87ed72.jpg",
                            NumOfPages = 1013,
                            Price = 96.4m,
                            Title = "Principles of political economy"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Jose Rizal",
                            CategoryId = 1,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8200),
                            ISBN = "OL14042495M",
                            ImageUrl = "/images/books/b8422c70-aebe-4333-8908-0a59b53e9ab3.jpg",
                            NumOfPages = 502,
                            Price = 38.2m,
                            Title = "The social cancer"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Andrew S. Tanenbaum",
                            CategoryId = 2,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8203),
                            ISBN = "013162959X",
                            ImageUrl = "/images/books/0355b9fb-bf1b-4ae5-a3b9-a88ea551f1b5.jpg",
                            NumOfPages = 658,
                            Price = 99.9m,
                            Title = "Computer networks"
                        },
                        new
                        {
                            Id = 5,
                            Author = "June Jamrich Parsons and Dan Oja",
                            CategoryId = 2,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8205),
                            ISBN = "0760034397",
                            ImageUrl = "/images/books/e538ff43-dded-46c1-b7e9-f33cd2096314.jpg",
                            NumOfPages = 313,
                            Price = 75.0m,
                            Title = "Computer concepts"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Robert H. Blissmer",
                            CategoryId = 2,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8209),
                            ISBN = "0471617830",
                            ImageUrl = "/images/books/e5089e94-d32f-43f0-9c85-25b5ecdfcd2e.jpg",
                            NumOfPages = 445,
                            Price = 45.5m,
                            Title = "Introducing Computers"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Mario F. Triola",
                            CategoryId = 3,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8211),
                            ISBN = "0805393277",
                            ImageUrl = "/images/books/04fe7e81-299e-4b26-b1fd-0e1a3149c9da.jpg",
                            NumOfPages = 581,
                            Price = 105.5m,
                            Title = "Elementary statistics"
                        },
                        new
                        {
                            Id = 8,
                            Author = "Howard Anton",
                            CategoryId = 3,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8214),
                            ISBN = "0471153060",
                            ImageUrl = "/images/books/005f0140-65ad-4b24-8f05-b2d45f274f49.jpg",
                            NumOfPages = 1130,
                            Price = 80.0m,
                            Title = "Calculus"
                        },
                        new
                        {
                            Id = 9,
                            Author = "Silvanus Phillips Thompson",
                            CategoryId = 3,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8217),
                            ISBN = "0312114109",
                            ImageUrl = "/images/books/8b457390-2df6-4f02-9a0b-6b3fe4890d85.jpg",
                            NumOfPages = 250,
                            Price = 75.5m,
                            Title = "Calculus made easy"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Soraya de Chadarevian and Harmke Kamminga",
                            CategoryId = 4,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8220),
                            ISBN = "9057022931",
                            ImageUrl = "/images/books/aa23bf8b-685c-430d-a256-7b684dd1cb90.jpg",
                            NumOfPages = 304,
                            Price = 99.0m,
                            Title = "Molecularizing biology and medicine"
                        },
                        new
                        {
                            Id = 11,
                            Author = "James A. Gillespie",
                            CategoryId = 4,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8223),
                            ISBN = "0521381835",
                            ImageUrl = "/images/books/27486390-9981-468b-93ad-c4cb1c8087ab.jpg",
                            NumOfPages = 358,
                            Price = 85.0m,
                            Title = "The price of health"
                        },
                        new
                        {
                            Id = 12,
                            Author = "Pickering, George White Sir",
                            CategoryId = 4,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8225),
                            ISBN = "019519800X",
                            ImageUrl = "/images/books/3faa928e-f41d-4710-a469-b8b357eef1ba.jpg",
                            NumOfPages = 327,
                            Price = 60.0m,
                            Title = "Creative malady"
                        },
                        new
                        {
                            Id = 13,
                            Author = "Richard G. Lipsey",
                            CategoryId = 1,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8228),
                            ISBN = "0060440163",
                            ImageUrl = "/images/books/fcc69c01-79fd-45b8-82cc-d7011b5493bc.jpg",
                            NumOfPages = 927,
                            Price = 98.5m,
                            Title = "Economics"
                        },
                        new
                        {
                            Id = 14,
                            Author = "Adam Smith and Andrew Skinner",
                            CategoryId = 1,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8230),
                            ISBN = "067940564X",
                            ImageUrl = "/images/books/b449a8b1-84f1-44dd-8c6d-e965b6efa90b.jpg",
                            NumOfPages = 620,
                            Price = 68.5m,
                            Title = "The wealth of nations"
                        },
                        new
                        {
                            Id = 15,
                            Author = "Hannah Arendt",
                            CategoryId = 1,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8233),
                            ISBN = "0226025926",
                            ImageUrl = "/images/books/3f3d222a-2401-437c-81b0-7db157cef7af.jpg",
                            NumOfPages = 365,
                            Price = 65.0m,
                            Title = "The human condition"
                        },
                        new
                        {
                            Id = 16,
                            Author = "Kenneth C. Laudon",
                            CategoryId = 2,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8235),
                            ISBN = "0072472618",
                            ImageUrl = "/images/books/3f569900-cc2e-4f9d-ac96-54cddcd7e4e6.jpg",
                            NumOfPages = 632,
                            Price = 62.0m,
                            Title = "The Interactive Computing"
                        },
                        new
                        {
                            Id = 17,
                            Author = "Larry E. Long",
                            CategoryId = 2,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8241),
                            ISBN = "013156241X",
                            ImageUrl = "/images/books/22ec6be5-99cc-4e1b-91b8-0459f964cfdf.jpg",
                            NumOfPages = 677,
                            Price = 78.0m,
                            Title = "Computers"
                        },
                        new
                        {
                            Id = 18,
                            Author = "Marshall C. Yovits",
                            CategoryId = 2,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8245),
                            ISBN = "012012114X",
                            ImageUrl = "/images/books/27cd64b2-01d7-4d33-bf31-ba2d9f5ef27a.jpg",
                            NumOfPages = 299,
                            Price = 69.0m,
                            Title = "Advances in Computers"
                        },
                        new
                        {
                            Id = 19,
                            Author = "Angela Belli and John L. Coulehan",
                            CategoryId = 4,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8254),
                            ISBN = "0877456372",
                            ImageUrl = "/images/books/e194f5d1-1914-4ab7-ba69-f2c24cd46e03.jpg",
                            NumOfPages = 160,
                            Price = 69.9m,
                            Title = "Blood & bone"
                        },
                        new
                        {
                            Id = 20,
                            Author = "AnElissa Lucas",
                            CategoryId = 4,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8262),
                            ISBN = "0030594545",
                            ImageUrl = "/images/books/6dff32cc-dcbc-425a-8406-6463b36678df.jpg",
                            NumOfPages = 188,
                            Price = 35.0m,
                            Title = "Chinese medical modernization"
                        },
                        new
                        {
                            Id = 21,
                            Author = "Richard Selzer",
                            CategoryId = 4,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8269),
                            ISBN = "0312186878",
                            ImageUrl = "/images/books/3cc142ee-2ac0-4cee-8a63-d88d271d0c86.jpg",
                            NumOfPages = 389,
                            Price = 40.0m,
                            Title = "The doctor stories"
                        },
                        new
                        {
                            Id = 22,
                            Author = "Elliott, Carl and John D. Lantos",
                            CategoryId = 5,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8273),
                            ISBN = "0822323362",
                            ImageUrl = "/images/books/3c0e44e3-4cb5-4c12-845e-5179e4b82717.jpg",
                            NumOfPages = 167,
                            Price = 52.9m,
                            Title = "The last physician"
                        },
                        new
                        {
                            Id = 23,
                            Author = "Aldous Huxley",
                            CategoryId = 5,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8276),
                            ISBN = "0060120355",
                            ImageUrl = "/images/books/86960c70-fd36-4ed1-94f9-3ecb8c47aa5a.jpg",
                            NumOfPages = 311,
                            Price = 30.0m,
                            Title = "Brave New World"
                        },
                        new
                        {
                            Id = 24,
                            Author = "Battista Guarini",
                            CategoryId = 5,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8281),
                            ISBN = "OL17974570M",
                            ImageUrl = "/images/books/b977e8e1-30eb-44a8-b70b-88a87fb7bbe5.jpg",
                            NumOfPages = 262,
                            Price = 32.5m,
                            Title = "Il pastor fido"
                        },
                        new
                        {
                            Id = 25,
                            Author = "Ernest F. Haeussler",
                            CategoryId = 3,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8288),
                            ISBN = "0130338559",
                            ImageUrl = "/images/books/d31de0aa-e93a-4122-ae68-a894811f66d1.jpg",
                            NumOfPages = 822,
                            Price = 79.9m,
                            Title = "Introductory mathematical analysis"
                        },
                        new
                        {
                            Id = 26,
                            Author = "John G. Kemeny",
                            CategoryId = 3,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8294),
                            ISBN = "013468835X",
                            ImageUrl = "/images/books/875ef8c0-31d5-476f-bd2c-0b1bd35aea0f.jpg",
                            NumOfPages = 465,
                            Price = 59.9m,
                            Title = "Introduction to finite mathematics"
                        },
                        new
                        {
                            Id = 27,
                            Author = "Adam Freeman",
                            CategoryId = 2,
                            CreatedOn = new DateTime(2023, 9, 7, 19, 26, 23, 236, DateTimeKind.Local).AddTicks(8301),
                            ISBN = "OL5818599M",
                            ImageUrl = "/images/books/b907a2b2-c4f3-4233-aef4-a0c46098a6df.jpg",
                            NumOfPages = 264,
                            Price = 35.5m,
                            Title = "Pro ASP .NET Core 6"
                        });
                });

            modelBuilder.Entity("BooksShop.Infrastructure.Data.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Economics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Technology"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Medicine"
                        },
                        new
                        {
                            Id = 5,
                            Name = "History"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("BooksShop.Infrastructure.Data.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(7000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(330)
                        .HasColumnType("nvarchar(330)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "ec3a92cc-8b64-4b83-bc6a-c20031faa327",
                            ConcurrencyStamp = "6610b899-c6bf-4036-9831-ad602745c824",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "b1353077-7dcd-4f94-820b-f8af8feb9690",
                            ConcurrencyStamp = "b2e26a49-1cd2-47b3-ba2b-2211e7d851e6",
                            Name = "Client",
                            NormalizedName = "CLIENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "283073f1-cc28-485a-ab58-44f4ed128264",
                            RoleId = "ec3a92cc-8b64-4b83-bc6a-c20031faa327"
                        },
                        new
                        {
                            UserId = "9a9b36f7-4a83-48c8-91d3-9136426dbee9",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "45538c3e-df96-4b79-86dc-e190def35cf4",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "a9e4a9d6-96f3-40dd-8968-a30baa02ce9b",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "8d307bd3-3290-43c2-b9b3-eb2daf715cb4",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "7a09fc16-8d35-48e4-bf98-532a876423f2",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "0908214c-eac6-4029-b303-8d987037c4ad",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "77eb1836-14d0-414d-85ad-3413afd9e2d9",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "f18ff312-2889-46df-a392-264b865a2c72",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "2c2467dc-c396-46ce-af79-da3e48398f4a",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "87582ce2-32f8-48ac-a429-cdb22d49bd45",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "2708e501-67b2-4c5b-aacd-9a044df9de21",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "2b760fe4-01b3-4794-9d1a-a63002dc3ccd",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "acb6d047-97c5-4553-82cf-d6042362af1e",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "a6424f60-c8e2-495d-bf48-bfb3e9457516",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "b2a83ec0-3fd0-4500-93b6-9fd1804db4fc",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "0e6103a7-8dae-4d2e-b438-74fe02768f4f",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "94280b80-6076-4025-9bf7-ae251fb7bcee",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "109044cd-44fb-470c-b7b9-2724987b08de",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "93a879f7-64a2-4a8c-b821-a1304bd7c8fb",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "d966a121-573e-49ed-bf9b-5f677d0a4aa8",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "1c1a75f2-63d1-4aaf-b026-b9e13ebb62ca",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "b87fc486-a805-4fad-89bd-c836281ce8a0",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "33008499-b5d6-4dc4-8b90-81eb4c5da11e",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "8a702a88-26b5-4e9d-bd3e-6b088b350db5",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "a6dc0238-4999-49e9-93c1-dfd243e36781",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "838db25f-ef7e-4cda-aa56-dfe1691d298d",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "22657eba-f41a-4bb3-986e-83ef23fedf15",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "038e5319-0910-4cba-bf80-253a10030324",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "978959e9-4ec5-49a0-a703-77884cc8d109",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        },
                        new
                        {
                            UserId = "1de2f067-3236-4b27-9fba-8b5d49db06ae",
                            RoleId = "b1353077-7dcd-4f94-820b-f8af8feb9690"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BooksShop.Infrastructure.Data.Book", b =>
                {
                    b.HasOne("BooksShop.Infrastructure.Data.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BooksShop.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BooksShop.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BooksShop.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BooksShop.Infrastructure.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BooksShop.Infrastructure.Data.Category", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
