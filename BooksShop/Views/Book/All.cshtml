@model BooksListViewModel

<h2 class="my-3">List of Books</h2>

@if (!Model.Books.Any())
{
    <h3 class="text-center mt-7 mb-7">No Books Found!</h3>
}

@if (this.TempData.ContainsKey(Message))
{
    <div class='alert alert-warning alert-dismissible fade show' role='alert'>
        <strong>@this.TempData[Message]</strong>
        <button type='button' class='btn-close' data-bs-dismiss='alert' aria-label='Close'></button>
    </div>
}

<script>
    function sortTable(column) {
        let order = "desc";
        let currentColumn = "@Model.Column";
        let currentOrder = "@Model.Order";

        if (column == currentColumn) {
            if (currentOrder == "asc") order = "desc";
            else order = "asc";
        }

        window.location.href = '?search=@Model.Search&column=' + column + '&order=' + order;
    }
</script>

<table class="table">
    <thead>
        <tr>
            <th style="cursor: pointer" onclick="sortTable('title')">Title</th>
            <th style="cursor: pointer" onclick="sortTable('author')">Author</th>
            <th style="cursor: pointer" onclick="sortTable('num_of_pages')">Pages</th>
            <th style="cursor: pointer" onclick="sortTable('price')">Price</th>
            <th style="cursor: pointer" onclick="sortTable('category')">Category</th>
            <th>Image</th>
            <th>Action</th>
        </tr>
    </thead>   
    <tbody>       
        @foreach (BookInListViewModel book in Model.Books)
        {
            <tr>
                <td>@book.Title</td>
                <td>@book.Author</td>
                <td>@book.NumOfPages</td>
                <td>@(book.Price)$</td>
                <td>@book.CategoryName</td>
                <td><img src="@book.ImageUrl" width="100"></td>
                <td style="white-space:nowrap">
                    <a class="btn btn-primary btn-sm my-2" asp-controller="Book" asp-action="Details" asp-route-id="@book.Id" role="button">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!--Pagination-->

<nav aria-label="...">
    <ul class="pagination justify-content-center">
        <li class="page-item @if (!Model.HasPreviousPage) { <text>disabled</text> }">
            <a class="page-link" asp-action="All" asp-route-page="@Model.PreviousPageNumber" asp-route-search="@Model.Search" asp-route-column="@Model.Column" asp-route-order="@Model.Order">Previous</a>
        </li>
        @for (int i = Model.CurrentPageNumber - 3; i < Model.CurrentPageNumber; i++)
        {
            if (i > 0)
            {
                <li class="page-item"><a class="page-link" asp-action="All" asp-route-page="@i" asp-route-search="@Model.Search" asp-route-column="@Model.Column" asp-route-order="@Model.Order">@i</a></li>
            }
        }
        <li class="page-item active" aria-current="page">
            <span class="page-link">
                @Model.CurrentPageNumber
            </span>
        </li>
        @for (int i = Model.CurrentPageNumber + 1; i <= Model.CurrentPageNumber + 3; i++)
        {
            if (i <= Model.PagesCount)
            {
                <li class="page-item"><a class="page-link" asp-action="All" asp-route-page="@i" asp-route-search="@Model.Search" asp-route-column="@Model.Column" asp-route-order="@Model.Order">@i</a></li>
            }
        }
        <li class="page-item @if (!Model.HasNextPage) { <text>disabled</text> }">
            <a class="page-link" asp-action="All" asp-route-page="@Model.NextPageNumber" asp-route-search="@Model.Search" asp-route-column="@Model.Column" asp-route-order="@Model.Order">Next</a>
        </li>
    </ul>
</nav>

